// <auto-generated />
using System;
using Boekingssysteem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Boekingssysteem.Migrations
{
    [DbContext(typeof(BoekingssysteemContext))]
    [Migration("20230310201324_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Boekingssysteem")
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Boekingssysteem.Models.Afwezigheid", b =>
                {
                    b.Property<int>("AfwezigheidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Begindatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EindDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Personeelnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("AfwezigheidID");

                    b.HasIndex("Personeelnummer");

                    b.ToTable("Afwezigheid");

                    b.HasData(
                        new
                        {
                            AfwezigheidID = 1,
                            Begindatum = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EindDatum = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Personeelnummer = "R0901658"
                        });
                });

            modelBuilder.Entity("Boekingssysteem.Models.Functie", b =>
                {
                    b.Property<int>("FunctieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FunctieID");

                    b.ToTable("Functie");

                    b.HasData(
                        new
                        {
                            FunctieID = 1,
                            Naam = "Leerling"
                        },
                        new
                        {
                            FunctieID = 2,
                            Naam = "Administratief personeel"
                        },
                        new
                        {
                            FunctieID = 3,
                            Naam = "Leerkracht"
                        });
                });

            modelBuilder.Entity("Boekingssysteem.Models.Persoon", b =>
                {
                    b.Property<string>("Personeelnummer")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<bool?>("Aanwezig")
                        .HasColumnType("bit");

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Personeelnummer");

                    b.ToTable("Persoon");

                    b.HasData(
                        new
                        {
                            Personeelnummer = "R0901658",
                            Aanwezig = true,
                            Admin = true,
                            Naam = "Mathieu",
                            Voornaam = "Christophe"
                        },
                        new
                        {
                            Personeelnummer = "R0901293",
                            Aanwezig = true,
                            Admin = true,
                            Naam = "De Wit",
                            Voornaam = "Laurens"
                        },
                        new
                        {
                            Personeelnummer = "R0658604",
                            Aanwezig = true,
                            Admin = true,
                            Naam = "Boeckx",
                            Voornaam = "Lender"
                        },
                        new
                        {
                            Personeelnummer = "R0123456",
                            Aanwezig = true,
                            Admin = false,
                            Naam = "Bellemans",
                            Voornaam = "Johan"
                        },
                        new
                        {
                            Personeelnummer = "R0123457",
                            Aanwezig = true,
                            Admin = true,
                            Naam = "Janssens",
                            Voornaam = "Jan"
                        });
                });

            modelBuilder.Entity("Boekingssysteem.Models.PersoonFunctie", b =>
                {
                    b.Property<int>("PersoonFunctieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FunctieID")
                        .HasColumnType("int");

                    b.Property<string>("Personeelnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("PersoonFunctieID");

                    b.HasIndex("FunctieID");

                    b.HasIndex("Personeelnummer");

                    b.ToTable("PersoonFunctie");

                    b.HasData(
                        new
                        {
                            PersoonFunctieID = 1,
                            FunctieID = 1,
                            Personeelnummer = "R0901658"
                        },
                        new
                        {
                            PersoonFunctieID = 2,
                            FunctieID = 1,
                            Personeelnummer = "R0658604"
                        },
                        new
                        {
                            PersoonFunctieID = 3,
                            FunctieID = 1,
                            Personeelnummer = "R0901293"
                        },
                        new
                        {
                            PersoonFunctieID = 5,
                            FunctieID = 2,
                            Personeelnummer = "R0123457"
                        },
                        new
                        {
                            PersoonFunctieID = 4,
                            FunctieID = 3,
                            Personeelnummer = "R0123456"
                        });
                });

            modelBuilder.Entity("Boekingssysteem.Models.PersoonRichting", b =>
                {
                    b.Property<int>("RichtingID")
                        .HasColumnType("int");

                    b.Property<string>("Personeelnummer")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<int>("PersoonRichtingID")
                        .HasColumnType("int");

                    b.HasKey("RichtingID", "Personeelnummer");

                    b.HasIndex("Personeelnummer");

                    b.ToTable("PersoonRichting");

                    b.HasData(
                        new
                        {
                            RichtingID = 1,
                            Personeelnummer = "R0901658",
                            PersoonRichtingID = 1
                        },
                        new
                        {
                            RichtingID = 1,
                            Personeelnummer = "R0658604",
                            PersoonRichtingID = 2
                        },
                        new
                        {
                            RichtingID = 1,
                            Personeelnummer = "R0901293",
                            PersoonRichtingID = 3
                        },
                        new
                        {
                            RichtingID = 2,
                            Personeelnummer = "R0123456",
                            PersoonRichtingID = 4
                        });
                });

            modelBuilder.Entity("Boekingssysteem.Models.Richting", b =>
                {
                    b.Property<int>("RichtingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RichtingID");

                    b.ToTable("Richting");

                    b.HasData(
                        new
                        {
                            RichtingID = 1,
                            Naam = "Informatica"
                        },
                        new
                        {
                            RichtingID = 2,
                            Naam = "Verpleegkunde"
                        });
                });

            modelBuilder.Entity("Boekingssysteem.Models.Afwezigheid", b =>
                {
                    b.HasOne("Boekingssysteem.Models.Persoon", "Persoon")
                        .WithMany("Afwezigheden")
                        .HasForeignKey("Personeelnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Boekingssysteem.Models.PersoonFunctie", b =>
                {
                    b.HasOne("Boekingssysteem.Models.Functie", "Functie")
                        .WithMany("PersoonFuncties")
                        .HasForeignKey("FunctieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boekingssysteem.Models.Persoon", "Persoon")
                        .WithMany("PersoonFuncties")
                        .HasForeignKey("Personeelnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Boekingssysteem.Models.PersoonRichting", b =>
                {
                    b.HasOne("Boekingssysteem.Models.Persoon", "Persoon")
                        .WithMany("PersoonRichtingen")
                        .HasForeignKey("Personeelnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boekingssysteem.Models.Richting", "Richting")
                        .WithMany("PersoonRichtingen")
                        .HasForeignKey("RichtingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
